name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to MicroK8s
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 94.159.106.78
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            microk8s config > ~/.kube/config
            microk8s kubectl create namespace fastapi-task --dry-run=client -o yaml | microk8s kubectl apply -f -
            cat <<EOF | microk8s kubectl apply -f -
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: fastapi-task
              namespace: fastapi-task
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: fastapi-task
              template:
                metadata:
                  labels:
                    app: fastapi-task
                spec:
                  containers:
                  - name: fastapi-task
                    image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
                    ports:
                    - containerPort: 8000
                    env:
                    - name: DATABASE_URL
                      valueFrom:
                        secretKeyRef:
                          name: fastapi-secrets
                          key: database-url
            EOF
            cat <<EOF | microk8s kubectl apply -f -
            apiVersion: v1
            kind: Service
            metadata:
              name: fastapi-task
              namespace: fastapi-task
            spec:
              selector:
                app: fastapi-task
              ports:
                - protocol: TCP
                  port: 8000
                  targetPort: 8000
              type: LoadBalancer
            EOF 